// Full-stack Medicine Reminder App Code (React Native + Node.js)

// 1. Frontend - React Native App
// File: App.js
import React, { useState } from 'react';
import { View, Text, Button, TextInput, Alert } from 'react-native';
import * as Notifications from 'expo-notifications';

Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: false,
    shouldSetBadge: false,
  }),
});

export default function App() {
  const [medicine, setMedicine] = useState('');
  const [time, setTime] = useState('');

  const scheduleNotification = async () => {
    await Notifications.scheduleNotificationAsync({
      content: {
        title: 'Medicine Reminder',
        body: `Time to take your ${medicine}!`,
      },
      trigger: { seconds: parseInt(time) * 60 },
    });
    Alert.alert('Reminder Set!', `Reminder for ${medicine} in ${time} minutes.`);
  };

  return (
    <View style={{ padding: 20 }}>
      <Text>Medicine Name:</Text>
      <TextInput value={medicine} onChangeText={setMedicine} style={{ borderBottomWidth: 1 }} />
      <Text>Reminder Time (minutes):</Text>
      <TextInput value={time} onChangeText={setTime} keyboardType="numeric" style={{ borderBottomWidth: 1 }} />
      <Button title="Set Reminder" onPress={scheduleNotification} />
    </View>
  );
}

// 2. Backend - Node.js + Express API
// File: server.js
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const app = express();
app.use(express.json());
app.use(cors());

mongoose.connect('mongodb://localhost:27017/medicine_reminder', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const ReminderSchema = new mongoose.Schema({
  medicine: String,
  time: Number,
});
const Reminder = mongoose.model('Reminder', ReminderSchema);

app.post('/reminders', async (req, res) => {
  const reminder = new Reminder(req.body);
  await reminder.save();
  res.send(reminder);
});

app.get('/reminders', async (req, res) => {
  const reminders = await Reminder.find();
  res.send(reminders);
});

app.listen(3000, () => console.log('Server running on port 3000'));
